DROP TABLE EMPLOYEE;
DROP TABLE DEPARTMENT;

CREATE TABLE DEPARTMENT
(
    DEPT_NO NUMBER,
    DEPT_NAME VARCHAR2(10),
    LOCATION VARCHAR2(10)
);

CREATE TABLE EMPLOYEE
(
    EMP_NO NUMBER,
    NAME VARCHAR2(10),
    DEPART NUMBER,
    POSITION VARCHAR2(10),
    GENDER VARCHAR2(1),
    HIRE_DATE DATE,
    SALARY NUMBER
);

ALTER TABLE DEPARTMENT ADD CONSTRAINT DEPARTMENT_PK PRIMARY KEY(DEPT_NO);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_PK PRIMARY KEY(EMP_NO);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_DEPARTMENT_FK FOREIGN KEY(DEPART) REFERENCES DEPARTMENT(DEPT_NO);

--외래키가 있어서 DEPARTMENT부터 INSERT해주기
INSERT INTO DEPARTMENT VALUES(1, '영업부', '대구');
INSERT INTO DEPARTMENT VALUES(2, '인사부', '서울');
INSERT INTO DEPARTMENT VALUES(3, '총무부', '대구');
INSERT INTO DEPARTMENT VALUES(4, '기획부', '서울');

INSERT INTO EMPLOYEE VALUES(1001, '구창민', 1, '과장', 'M', '95-05-01', 5000000);
INSERT INTO EMPLOYEE VALUES(1002, '김민서', 1, '사원', 'M', '17-09-01', 2500000);
INSERT INTO EMPLOYEE VALUES(1003, '이은영', 2, '부장', 'F', '90-09-01', 5500000);
INSERT INTO EMPLOYEE VALUES(1004, '한성일', 2, '과장', 'M', '93-04-01', 5000000);

COMMIT; --SELECT한 것 DB에 저장

--카테젼곱
-- 두 테이블의 조인 조건(관계)이 잘못되거나 없을 때 나타난다.
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
     , E.HIRE_DATE
     , E.SALARY
  FROM EMPLOYEE E, DEPARTMENT D;

SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
     , E.HIRE_DATE
     , E.SALARY
  FROM EMPLOYEE E
 CROSS JOIN DEPARTMENT D;

--내부조인
-- INNER JOIN
-- 양쪽 테이블에 모두 존재하는 데이터만 조이하는 것

--JOIN ON 사용법
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
     , E.HIRE_DATE
     , E.SALARY
  FROM EMPLOYEE E INNER JOIN DEPARTMENT D
    ON E.DEPART = D.DEPT_NO;
    
-- 위와 같은결과 나옴  
-- 콤마로 구분법
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
     , E.HIRE_DATE
     , E.SALARY
  FROM EMPLOYEE E, DEPARTMENT D
 WHERE E.DEPART = D.DEPT_NO;
 
-- 외부조인
-- OUTER JOIN

-- 아래의 '김미나'필드를 추가하기 위해 외래키를 잠깐 꺼야하는 상황 발생
-- '참조무결성'에 의해'김미나'데이터가 삽입되지 않는다.

-- 이거는 아에 외래키 삭제(비추)
-- ALTER TABLE EMPLOYEE DROP CONSTRAINT EMPLOYEE_DEPARTMENT_FK;

-- 이거는 외래키 잠깐 끄는것(추천)
ALTER TABLE EMPLOYEE DISABLE CONSTRAINT EMPLOYEE_DEPARTMENT_FK;
-- 데이터 추가
INSERT INTO EMPLOYEE VALUES(1005, '김미나', 5, '사원', 'F', '18-05-01', 1800000);

--이거는 외래키 다시 키는것
--ALTER TABLE EMPLOYEE ENABLE CONSTRAINT EMPLOYEE_DEPARTMENT_FK;

-- 외부조인
-- 모든 사원의 EMP_NO, NAME, DEPT_NAME. POSITION을 출력하시오.
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
  FROM EMPLOYEE E LEFT OUTER JOIN DEPARTMENT D
    ON D.DEPT_NO = E.DEPART;

SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
  FROM EMPLOYEE E, DEPARTMENT D
 WHERE E.DEPART = D.DEPT_NO(+);
 
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
  FROM DEPARTMENT D RIGHT OUTER JOIN EMPLOYEE E
    ON D.DEPT_NO = E.DEPART;
    
SELECT
       E.EMP_NO
     , E.NAME
     , D.DEPT_NAME
     , E.POSITION
  FROM DEPARTMENT D, EMPLOYEE E
 WHERE D.DEPT_NO(+) = E.DEPART;
 
/*
    DEPT_NO  사원수
        1       2
        2       2
        3       0
        4       0
*/

SELECT
       D.DEPT_NO
     , COUNT(E.DEPART) AS 사원수
  FROM DEPARTMENT D LEFT OUTER JOIN EMPLOYEE E
    ON D.DEPT_NO = E.DEPART
 GROUP BY D.DEPT_NO;



